if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); if (function (t) { "use strict"; var e = t.fn.jquery.split(" ")[0].split("."); if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4") }(jQuery), function (t) { "use strict"; var e = function (t, e) { this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t, e) }; e.VERSION = "3.3.7", e.TRANSITION_DURATION = 150, e.DEFAULTS = { animation: !0, placement: "top", selector: !1, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1, viewport: { selector: "body", padding: 0 } }, e.prototype.init = function (e, i, o) { if (this.enabled = !0, this.type = e, this.$element = t(i), this.options = this.getOptions(o), this.$viewport = this.options.viewport && t(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: !1, hover: !1, focus: !1 }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!"); for (var n = this.options.trigger.split(" "), s = n.length; s--;) { var r = n[s]; if ("click" == r) this.$element.on("click." + this.type, this.options.selector, t.proxy(this.toggle, this)); else if ("manual" != r) { var l = "hover" == r ? "mouseenter" : "focusin", a = "hover" == r ? "mouseleave" : "focusout"; this.$element.on(l + "." + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(a + "." + this.type, this.options.selector, t.proxy(this.leave, this)) } } this.options.selector ? this._options = t.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle() }, e.prototype.getDefaults = function () { return e.DEFAULTS }, e.prototype.getOptions = function (e) { return (e = t.extend({}, this.getDefaults(), this.$element.data(), e)).delay && "number" == typeof e.delay && (e.delay = { show: e.delay, hide: e.delay }), e }, e.prototype.getDelegateOptions = function () { var e = {}, i = this.getDefaults(); return this._options && t.each(this._options, function (t, o) { i[t] != o && (e[t] = o) }), e }, e.prototype.enter = function (e) { var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type); return i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusin" == e.type ? "focus" : "hover"] = !0), i.tip().hasClass("in") || "in" == i.hoverState ? void (i.hoverState = "in") : (clearTimeout(i.timeout), i.hoverState = "in", i.options.delay && i.options.delay.show ? void (i.timeout = setTimeout(function () { "in" == i.hoverState && i.show() }, i.options.delay.show)) : i.show()) }, e.prototype.isInStateTrue = function () { for (var t in this.inState) if (this.inState[t]) return !0; return !1 }, e.prototype.leave = function (e) { var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type); return i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusout" == e.type ? "focus" : "hover"] = !1), i.isInStateTrue() ? void 0 : (clearTimeout(i.timeout), i.hoverState = "out", i.options.delay && i.options.delay.hide ? void (i.timeout = setTimeout(function () { "out" == i.hoverState && i.hide() }, i.options.delay.hide)) : i.hide()) }, e.prototype.show = function () { var i = t.Event("show.bs." + this.type); if (this.hasContent() && this.enabled) { this.$element.trigger(i); var o = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]); if (i.isDefaultPrevented() || !o) return; var n = this, s = this.tip(), r = this.getUID(this.type); this.setContent(), s.attr("id", r), this.$element.attr("aria-describedby", r), this.options.animation && s.addClass("fade"); var l = "function" == typeof this.options.placement ? this.options.placement.call(this, s[0], this.$element[0]) : this.options.placement, a = /\s?auto?\s?/i, p = a.test(l); p && (l = l.replace(a, "") || "top"), s.detach().css({ top: 0, left: 0, display: "block" }).addClass(l).data("bs." + this.type, this), this.options.container ? s.appendTo(this.options.container) : s.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type); var h = this.getPosition(), f = s[0].offsetWidth, u = s[0].offsetHeight; if (p) { var c = l, d = this.getPosition(this.$viewport); l = "bottom" == l && h.bottom + u > d.bottom ? "top" : "top" == l && h.top - u < d.top ? "bottom" : "right" == l && h.right + f > d.width ? "left" : "left" == l && h.left - f < d.left ? "right" : l, s.removeClass(c).addClass(l) } var v = this.getCalculatedOffset(l, h, f, u); this.applyPlacement(v, l); var g = function () { var t = n.hoverState; n.$element.trigger("shown.bs." + n.type), n.hoverState = null, "out" == t && n.leave(n) }; t.support.transition && this.$tip.hasClass("fade") ? s.one("bsTransitionEnd", g).emulateTransitionEnd(e.TRANSITION_DURATION) : g() } }, e.prototype.applyPlacement = function (e, i) { var o = this.tip(), n = o[0].offsetWidth, s = o[0].offsetHeight, r = parseInt(o.css("margin-top"), 10), l = parseInt(o.css("margin-left"), 10); isNaN(r) && (r = 0), isNaN(l) && (l = 0), e.top += r, e.left += l, t.offset.setOffset(o[0], t.extend({ using: function (t) { o.css({ top: Math.round(t.top), left: Math.round(t.left) }) } }, e), 0), o.addClass("in"); var a = o[0].offsetWidth, p = o[0].offsetHeight; "top" == i && p != s && (e.top = e.top + s - p); var h = this.getViewportAdjustedDelta(i, e, a, p); h.left ? e.left += h.left : e.top += h.top; var f = /top|bottom/.test(i), u = f ? 2 * h.left - n + a : 2 * h.top - s + p, c = f ? "offsetWidth" : "offsetHeight"; o.offset(e), this.replaceArrow(u, o[0][c], f) }, e.prototype.replaceArrow = function (t, e, i) { this.arrow().css(i ? "left" : "top", 50 * (1 - t / e) + "%").css(i ? "top" : "left", "") }, e.prototype.setContent = function () { var t = this.tip(), e = this.getTitle(); t.find(".tooltip-inner")[this.options.html ? "html" : "text"](e), t.removeClass("fade in top bottom left right") }, e.prototype.hide = function (i) { function o() { "in" != n.hoverState && s.detach(), n.$element && n.$element.removeAttr("aria-describedby").trigger("hidden.bs." + n.type), i && i() } var n = this, s = t(this.$tip), r = t.Event("hide.bs." + this.type); return this.$element.trigger(r), r.isDefaultPrevented() ? void 0 : (s.removeClass("in"), t.support.transition && s.hasClass("fade") ? s.one("bsTransitionEnd", o).emulateTransitionEnd(e.TRANSITION_DURATION) : o(), this.hoverState = null, this) }, e.prototype.fixTitle = function () { var t = this.$element; (t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "") }, e.prototype.hasContent = function () { return this.getTitle() }, e.prototype.getPosition = function (e) { var i = (e = e || this.$element)[0], o = "BODY" == i.tagName, n = i.getBoundingClientRect(); null == n.width && (n = t.extend({}, n, { width: n.right - n.left, height: n.bottom - n.top })); var s = window.SVGElement && i instanceof window.SVGElement, r = o ? { top: 0, left: 0 } : s ? null : e.offset(), l = { scroll: o ? document.documentElement.scrollTop || document.body.scrollTop : e.scrollTop() }, a = o ? { width: t(window).width(), height: t(window).height() } : null; return t.extend({}, n, l, a, r) }, e.prototype.getCalculatedOffset = function (t, e, i, o) { return "bottom" == t ? { top: e.top + e.height, left: e.left + e.width / 2 - i / 2 } : "top" == t ? { top: e.top - o, left: e.left + e.width / 2 - i / 2 } : "left" == t ? { top: e.top + e.height / 2 - o / 2, left: e.left - i } : { top: e.top + e.height / 2 - o / 2, left: e.left + e.width } }, e.prototype.getViewportAdjustedDelta = function (t, e, i, o) { var n = { top: 0, left: 0 }; if (!this.$viewport) return n; var s = this.options.viewport && this.options.viewport.padding || 0, r = this.getPosition(this.$viewport); if (/right|left/.test(t)) { var l = e.top - s - r.scroll, a = e.top + s - r.scroll + o; l < r.top ? n.top = r.top - l : a > r.top + r.height && (n.top = r.top + r.height - a) } else { var p = e.left - s, h = e.left + s + i; p < r.left ? n.left = r.left - p : h > r.right && (n.left = r.left + r.width - h) } return n }, e.prototype.getTitle = function () { var t = this.$element, e = this.options; return t.attr("data-original-title") || ("function" == typeof e.title ? e.title.call(t[0]) : e.title) }, e.prototype.getUID = function (t) { do { t += ~~(1e6 * Math.random()) } while (document.getElementById(t)); return t }, e.prototype.tip = function () { if (!this.$tip && (this.$tip = t(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!"); return this.$tip }, e.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow") }, e.prototype.enable = function () { this.enabled = !0 }, e.prototype.disable = function () { this.enabled = !1 }, e.prototype.toggleEnabled = function () { this.enabled = !this.enabled }, e.prototype.toggle = function (e) { var i = this; e && ((i = t(e.currentTarget).data("bs." + this.type)) || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i))), e ? (i.inState.click = !i.inState.click, i.isInStateTrue() ? i.enter(i) : i.leave(i)) : i.tip().hasClass("in") ? i.leave(i) : i.enter(i) }, e.prototype.destroy = function () { var t = this; clearTimeout(this.timeout), this.hide(function () { t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null, t.$element = null }) }; var i = t.fn.tooltip; t.fn.tooltip = function (i) { return this.each(function () { var o = t(this), n = o.data("bs.tooltip"), s = "object" == typeof i && i; !n && /destroy|hide/.test(i) || (n || o.data("bs.tooltip", n = new e(this, s)), "string" == typeof i && n[i]()) }) }, t.fn.tooltip.Constructor = e, t.fn.tooltip.noConflict = function () { return t.fn.tooltip = i, this } }(jQuery), "undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); !function (t) { "use strict"; var e = t.fn.jquery.split(" ")[0].split("."); if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4") }(jQuery), function (t) { "use strict"; var e = function (t, e) { this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t, e) }; e.VERSION = "3.3.7", e.TRANSITION_DURATION = 150, e.DEFAULTS = { animation: !0, placement: "top", selector: !1, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1, viewport: { selector: "body", padding: 0 } }, e.prototype.init = function (e, i, o) { if (this.enabled = !0, this.type = e, this.$element = t(i), this.options = this.getOptions(o), this.$viewport = this.options.viewport && t(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: !1, hover: !1, focus: !1 }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!"); for (var n = this.options.trigger.split(" "), s = n.length; s--;) { var r = n[s]; if ("click" == r) this.$element.on("click." + this.type, this.options.selector, t.proxy(this.toggle, this)); else if ("manual" != r) { var l = "hover" == r ? "mouseenter" : "focusin", a = "hover" == r ? "mouseleave" : "focusout"; this.$element.on(l + "." + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(a + "." + this.type, this.options.selector, t.proxy(this.leave, this)) } } this.options.selector ? this._options = t.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle() }, e.prototype.getDefaults = function () { return e.DEFAULTS }, e.prototype.getOptions = function (e) { return (e = t.extend({}, this.getDefaults(), this.$element.data(), e)).delay && "number" == typeof e.delay && (e.delay = { show: e.delay, hide: e.delay }), e }, e.prototype.getDelegateOptions = function () { var e = {}, i = this.getDefaults(); return this._options && t.each(this._options, function (t, o) { i[t] != o && (e[t] = o) }), e }, e.prototype.enter = function (e) { var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type); if (i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusin" == e.type ? "focus" : "hover"] = !0), i.tip().hasClass("in") || "in" == i.hoverState) i.hoverState = "in"; else { if (clearTimeout(i.timeout), i.hoverState = "in", !i.options.delay || !i.options.delay.show) return i.show(); i.timeout = setTimeout(function () { "in" == i.hoverState && i.show() }, i.options.delay.show) } }, e.prototype.isInStateTrue = function () { for (var t in this.inState) if (this.inState[t]) return !0; return !1 }, e.prototype.leave = function (e) { var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type); if (i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusout" == e.type ? "focus" : "hover"] = !1), !i.isInStateTrue()) { if (clearTimeout(i.timeout), i.hoverState = "out", !i.options.delay || !i.options.delay.hide) return i.hide(); i.timeout = setTimeout(function () { "out" == i.hoverState && i.hide() }, i.options.delay.hide) } }, e.prototype.show = function () { var i = t.Event("show.bs." + this.type); if (this.hasContent() && this.enabled) { this.$element.trigger(i); var o = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]); if (i.isDefaultPrevented() || !o) return; var n = this, s = this.tip(), r = this.getUID(this.type); this.setContent(), s.attr("id", r), this.$element.attr("aria-describedby", r), this.options.animation && s.addClass("fade"); var l = "function" == typeof this.options.placement ? this.options.placement.call(this, s[0], this.$element[0]) : this.options.placement, a = /\s?auto?\s?/i, p = a.test(l); p && (l = l.replace(a, "") || "top"), s.detach().css({ top: 0, left: 0, display: "block" }).addClass(l).data("bs." + this.type, this), this.options.container ? s.appendTo(this.options.container) : s.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type); var h = this.getPosition(), f = s[0].offsetWidth, u = s[0].offsetHeight; if (p) { var c = l, d = this.getPosition(this.$viewport); l = "bottom" == l && h.bottom + u > d.bottom ? "top" : "top" == l && h.top - u < d.top ? "bottom" : "right" == l && h.right + f > d.width ? "left" : "left" == l && h.left - f < d.left ? "right" : l, s.removeClass(c).addClass(l) } var v = this.getCalculatedOffset(l, h, f, u); this.applyPlacement(v, l); var g = function () { var t = n.hoverState; n.$element.trigger("shown.bs." + n.type), n.hoverState = null, "out" == t && n.leave(n) }; t.support.transition && this.$tip.hasClass("fade") ? s.one("bsTransitionEnd", g).emulateTransitionEnd(e.TRANSITION_DURATION) : g() } }, e.prototype.applyPlacement = function (e, i) { var o = this.tip(), n = o[0].offsetWidth, s = o[0].offsetHeight, r = parseInt(o.css("margin-top"), 10), l = parseInt(o.css("margin-left"), 10); isNaN(r) && (r = 0), isNaN(l) && (l = 0), e.top += r, e.left += l, t.offset.setOffset(o[0], t.extend({ using: function (t) { o.css({ top: Math.round(t.top), left: Math.round(t.left) }) } }, e), 0), o.addClass("in"); var a = o[0].offsetWidth, p = o[0].offsetHeight; "top" == i && p != s && (e.top = e.top + s - p); var h = this.getViewportAdjustedDelta(i, e, a, p); h.left ? e.left += h.left : e.top += h.top; var f = /top|bottom/.test(i), u = f ? 2 * h.left - n + a : 2 * h.top - s + p, c = f ? "offsetWidth" : "offsetHeight"; o.offset(e), this.replaceArrow(u, o[0][c], f) }, e.prototype.replaceArrow = function (t, e, i) { this.arrow().css(i ? "left" : "top", 50 * (1 - t / e) + "%").css(i ? "top" : "left", "") }, e.prototype.setContent = function () { var t = this.tip(), e = this.getTitle(); t.find(".tooltip-inner")[this.options.html ? "html" : "text"](e), t.removeClass("fade in top bottom left right") }, e.prototype.hide = function (i) { var o = this, n = t(this.$tip), s = t.Event("hide.bs." + this.type); function r() { "in" != o.hoverState && n.detach(), o.$element && o.$element.removeAttr("aria-describedby").trigger("hidden.bs." + o.type), i && i() } if (this.$element.trigger(s), !s.isDefaultPrevented()) return n.removeClass("in"), t.support.transition && n.hasClass("fade") ? n.one("bsTransitionEnd", r).emulateTransitionEnd(e.TRANSITION_DURATION) : r(), this.hoverState = null, this }, e.prototype.fixTitle = function () { var t = this.$element; (t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "") }, e.prototype.hasContent = function () { return this.getTitle() }, e.prototype.getPosition = function (e) { var i = (e = e || this.$element)[0], o = "BODY" == i.tagName, n = i.getBoundingClientRect(); null == n.width && (n = t.extend({}, n, { width: n.right - n.left, height: n.bottom - n.top })); var s = window.SVGElement && i instanceof window.SVGElement, r = o ? { top: 0, left: 0 } : s ? null : e.offset(), l = { scroll: o ? document.documentElement.scrollTop || document.body.scrollTop : e.scrollTop() }, a = o ? { width: t(window).width(), height: t(window).height() } : null; return t.extend({}, n, l, a, r) }, e.prototype.getCalculatedOffset = function (t, e, i, o) { return "bottom" == t ? { top: e.top + e.height, left: e.left + e.width / 2 - i / 2 } : "top" == t ? { top: e.top - o, left: e.left + e.width / 2 - i / 2 } : "left" == t ? { top: e.top + e.height / 2 - o / 2, left: e.left - i } : { top: e.top + e.height / 2 - o / 2, left: e.left + e.width } }, e.prototype.getViewportAdjustedDelta = function (t, e, i, o) { var n = { top: 0, left: 0 }; if (!this.$viewport) return n; var s = this.options.viewport && this.options.viewport.padding || 0, r = this.getPosition(this.$viewport); if (/right|left/.test(t)) { var l = e.top - s - r.scroll, a = e.top + s - r.scroll + o; l < r.top ? n.top = r.top - l : a > r.top + r.height && (n.top = r.top + r.height - a) } else { var p = e.left - s, h = e.left + s + i; p < r.left ? n.left = r.left - p : h > r.right && (n.left = r.left + r.width - h) } return n }, e.prototype.getTitle = function () { var t = this.$element, e = this.options; return t.attr("data-original-title") || ("function" == typeof e.title ? e.title.call(t[0]) : e.title) }, e.prototype.getUID = function (t) { do { t += ~~(1e6 * Math.random()) } while (document.getElementById(t)); return t }, e.prototype.tip = function () { if (!this.$tip && (this.$tip = t(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!"); return this.$tip }, e.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow") }, e.prototype.enable = function () { this.enabled = !0 }, e.prototype.disable = function () { this.enabled = !1 }, e.prototype.toggleEnabled = function () { this.enabled = !this.enabled }, e.prototype.toggle = function (e) { var i = this; e && ((i = t(e.currentTarget).data("bs." + this.type)) || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i))), e ? (i.inState.click = !i.inState.click, i.isInStateTrue() ? i.enter(i) : i.leave(i)) : i.tip().hasClass("in") ? i.leave(i) : i.enter(i) }, e.prototype.destroy = function () { var t = this; clearTimeout(this.timeout), this.hide(function () { t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null, t.$element = null }) }; var i = t.fn.tooltip; t.fn.tooltip = function (i) { return this.each(function () { var o = t(this), n = o.data("bs.tooltip"), s = "object" == typeof i && i; !n && /destroy|hide/.test(i) || (n || o.data("bs.tooltip", n = new e(this, s)), "string" == typeof i && n[i]()) }) }, t.fn.tooltip.Constructor = e, t.fn.tooltip.noConflict = function () { return t.fn.tooltip = i, this } }(jQuery);
/* ========================================================================
 * Bootstrap: dropdown.js v3.0.3
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) {
   "use strict";

   // DROPDOWN CLASS DEFINITION
   // =========================

   var backdrop = '.dropdown-backdrop'
   var toggle = '[data-toggle=dropdown]'
   var Dropdown = function (element) {
      $(element).on('click.bs.dropdown', this.toggle)
   }

   Dropdown.prototype.toggle = function (e) {
      var $this = $(this)

      if ($this.is('.disabled, :disabled')) return

      var $parent = getParent($this)
      var isActive = $parent.hasClass('open')

      clearMenus()

      if (!isActive) {
         if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
            // if mobile we use a backdrop because click events don't delegate
            $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus)
         }

         $parent.trigger(e = $.Event('show.bs.dropdown'))

         if (e.isDefaultPrevented()) return

         $parent
            .toggleClass('open')
            .trigger('shown.bs.dropdown')

         $this.focus()
      }

      return false
   }

   Dropdown.prototype.keydown = function (e) {
      if (!/(38|40|27)/.test(e.keyCode)) return

      var $this = $(this)

      e.preventDefault()
      e.stopPropagation()

      if ($this.is('.disabled, :disabled')) return

      var $parent = getParent($this)
      var isActive = $parent.hasClass('open')

      if (!isActive || (isActive && e.keyCode == 27)) {
         if (e.which == 27) $parent.find(toggle).focus()
         return $this.click()
      }

      var $items = $('[role=menu] li:not(.divider):visible a', $parent)

      if (!$items.length) return

      var index = $items.index($items.filter(':focus'))

      if (e.keyCode == 38 && index > 0) index--                        // up
      if (e.keyCode == 40 && index < $items.length - 1) index++                        // down
      if (!~index) index = 0

      $items.eq(index).focus()
   }

   function clearMenus() {
      $(backdrop).remove()
      $(toggle).each(function (e) {
         var $parent = getParent($(this))
         if (!$parent.hasClass('open')) return
         $parent.trigger(e = $.Event('hide.bs.dropdown'))
         if (e.isDefaultPrevented()) return
         $parent.removeClass('open').trigger('hidden.bs.dropdown')
      })
   }

   function getParent($this) {
      var selector = $this.attr('data-target')

      if (!selector) {
         selector = $this.attr('href')
         selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
      }

      var $parent = selector && $(selector)

      return $parent && $parent.length ? $parent : $this.parent()
   }


   // DROPDOWN PLUGIN DEFINITION
   // ==========================

   var old = $.fn.dropdown

   $.fn.dropdown = function (option) {
      return this.each(function () {
         var $this = $(this)
         var data = $this.data('bs.dropdown')

         if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
         if (typeof option == 'string') data[option].call($this)
      })
   }

   $.fn.dropdown.Constructor = Dropdown


   // DROPDOWN NO CONFLICT
   // ====================

   $.fn.dropdown.noConflict = function () {
      $.fn.dropdown = old
      return this
   }


   // APPLY TO STANDARD DROPDOWN ELEMENTS
   // ===================================

   $(document)
      .on('click.bs.dropdown.data-api', clearMenus)
      .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
      .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
      .on('keydown.bs.dropdown.data-api', toggle + ', [role=menu]', Dropdown.prototype.keydown)

}(jQuery);
function iOS() {

   var iDevices = [
      'iPad Simulator',
      'iPhone Simulator',
      'iPod Simulator',
      'iPad',
      'iPhone',
      'iPod'
   ];

   if (!!navigator.platform) {
      while (iDevices.length) {
         if (navigator.platform === iDevices.pop()) { return true; }
      }
   }

   return false;
}
(function (name) {
   function BNS() {
      var settings = {
         prevScroll: 0,
         prevPosition: '',
         prevOverflow: '',
         prevClasses: '',
         on: false,
         classes: ''
      };

      var getPrev = function () {
         settings.prevScroll = (window.pageYOffset || document.documentElement.scrollTop) - (document.documentElement.clientTop || 0);
         settings.prevPosition = document.body.style.position;
         settings.prevOverflow = document.body.style.overflow;
         settings.prevClasses = document.body.className;
      };

      return {
         set: function (data) {
            settings.classes = data.classes;
         },
         isOn: function () {
            return settings.on;
         },
         on: function (additionalClasses) {
            if (typeof additionalClasses === 'undefined') additionalClasses = '';

            if (settings.on) return;
            settings.on = true;

            getPrev();

            document.body.className = document.body.className + ' ' + settings.classes + ' ' + additionalClasses;
            if (iOS()) {
               if (settings.prevScroll == 0) {
                  settings.prevScroll = -1
               }
               document.body.style.top = -settings.prevScroll + 'px';
               setTimeout(function () {
                  document.body.style.position = 'fixed';
               }, 0); // WebKit/Blink bugfix
            }
            else {
               document.body.style.overflow = 'hidden';
            }
         },
         off: function () {
            if (!settings.on) return;
            settings.on = false;
            document.body.className = settings.prevClasses;
            if (iOS()) {
            document.body.style.top = 0;
            };
            document.body.style.position = '';
            document.body.style.overflow = settings.prevOverflow;
            window.scrollTo(0, settings.prevScroll);
         }
      };
   }

   window[name] = new BNS();
})('BNS');
+function ($) {
   'use strict';
   var version = $.fn.jquery.split(' ')[0].split('.')
   if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {
      throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')
   }
}(jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.3.7
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
   'use strict';

   // MODAL CLASS DEFINITION
   // ======================

   var Modal = function (element, options) {
      this.options = options
      this.$body = $(document.body)
      this.$element = $(element)
      this.$dialog = this.$element.find('.modal-dialog')
      this.$backdrop = null
      this.isShown = null
      this.originalBodyPad = null
      this.scrollbarWidth = 0
      this.ignoreBackdropClick = false

      if (this.options.remote) {
         this.$element
            .find('.modal-content')
            .load(this.options.remote, $.proxy(function () {
               this.$element.trigger('loaded.bs.modal')
            }, this))
      }
   }

   Modal.VERSION = '3.3.7'

   Modal.TRANSITION_DURATION = 300
   Modal.BACKDROP_TRANSITION_DURATION = 150

   Modal.DEFAULTS = {
      backdrop: true,
      keyboard: true,
      show: true
   }

   Modal.prototype.toggle = function (_relatedTarget) {
      return this.isShown ? this.hide() : this.show(_relatedTarget)
   }

   Modal.prototype.show = function (_relatedTarget) {
      var that = this
      var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

      this.$element.trigger(e)

      if (this.isShown || e.isDefaultPrevented()) return

      this.isShown = true

      this.checkScrollbar()
      this.setScrollbar()
      this.$body.addClass('modal-open')

      this.escape()
      this.resize()

      this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

      this.$dialog.on('mousedown.dismiss.bs.modal', function () {
         that.$element.one('mouseup.dismiss.bs.modal', function (e) {
            if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
         })
      })

      this.backdrop(function () {
         var transition = $.support.transition && that.$element.hasClass('fade')

         if (!that.$element.parent().length) {
            that.$element.appendTo(that.$body) // don't move modals dom position
         }

         that.$element
            .show()
            .scrollTop(0)

         that.adjustDialog()

         if (transition) {
            that.$element[0].offsetWidth // force reflow
         }

         that.$element.addClass('in')

         that.enforceFocus()

         var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

         transition ?
            that.$dialog // wait for modal to slide in
               .one('bsTransitionEnd', function () {
                  that.$element.trigger('focus').trigger(e)
               })
               .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
            that.$element.trigger('focus').trigger(e)
      })
   }

   Modal.prototype.hide = function (e) {
      if (e) e.preventDefault()

      e = $.Event('hide.bs.modal')

      this.$element.trigger(e)

      if (!this.isShown || e.isDefaultPrevented()) return

      this.isShown = false

      this.escape()
      this.resize()

      $(document).off('focusin.bs.modal')

      this.$element
         .removeClass('in')
         .off('click.dismiss.bs.modal')
         .off('mouseup.dismiss.bs.modal')

      this.$dialog.off('mousedown.dismiss.bs.modal')

      $.support.transition && this.$element.hasClass('fade') ?
         this.$element
            .one('bsTransitionEnd', $.proxy(this.hideModal, this))
            .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
         this.hideModal()
   }

   Modal.prototype.enforceFocus = function () {
      $(document)
         .off('focusin.bs.modal') // guard against infinite focus loop
         .on('focusin.bs.modal', $.proxy(function (e) {
            if (document !== e.target &&
               this.$element[0] !== e.target &&
               !this.$element.has(e.target).length) {
               this.$element.trigger('focus')
            }
         }, this))
   }

   Modal.prototype.escape = function () {
      if (this.isShown && this.options.keyboard) {
         this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
            e.which == 27 && this.hide()
         }, this))
      } else if (!this.isShown) {
         this.$element.off('keydown.dismiss.bs.modal')
      }
   }

   Modal.prototype.resize = function () {
      if (this.isShown) {
         $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
      } else {
         $(window).off('resize.bs.modal')
      }
   }

   Modal.prototype.hideModal = function () {
      var that = this
      this.$element.hide()
      this.backdrop(function () {
         that.$body.removeClass('modal-open')
         that.resetAdjustments()
         that.resetScrollbar()
         that.$element.trigger('hidden.bs.modal')
      })
   }

   Modal.prototype.removeBackdrop = function () {
      this.$backdrop && this.$backdrop.remove()
      this.$backdrop = null
   }

   Modal.prototype.backdrop = function (callback) {
      var that = this
      var animate = this.$element.hasClass('fade') ? 'fade' : ''

      if (this.isShown && this.options.backdrop) {
         var doAnimate = $.support.transition && animate

         this.$backdrop = $(document.createElement('div'))
            .addClass('modal-backdrop ' + animate)
            .appendTo(this.$body)

         this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
            if (this.ignoreBackdropClick) {
               this.ignoreBackdropClick = false
               return
            }
            if (e.target !== e.currentTarget) return
            this.options.backdrop == 'static'
               ? this.$element[0].focus()
               : this.hide()
         }, this))

         if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

         this.$backdrop.addClass('in')

         if (!callback) return

         doAnimate ?
            this.$backdrop
               .one('bsTransitionEnd', callback)
               .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
            callback()

      } else if (!this.isShown && this.$backdrop) {
         this.$backdrop.removeClass('in')

         var callbackRemove = function () {
            that.removeBackdrop()
            callback && callback()
         }
         $.support.transition && this.$element.hasClass('fade') ?
            this.$backdrop
               .one('bsTransitionEnd', callbackRemove)
               .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
            callbackRemove()

      } else if (callback) {
         callback()
      }
   }

   // these following methods are used to handle overflowing modals

   Modal.prototype.handleUpdate = function () {
      this.adjustDialog()
   }

   Modal.prototype.adjustDialog = function () {
      var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

      this.$element.css({
         paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
         paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
      })
   }

   Modal.prototype.resetAdjustments = function () {
      this.$element.css({
         paddingLeft: '',
         paddingRight: ''
      })
   }

   Modal.prototype.checkScrollbar = function () {
      var fullWindowWidth = window.innerWidth
      if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
         var documentElementRect = document.documentElement.getBoundingClientRect()
         fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
      }
      this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
      this.scrollbarWidth = this.measureScrollbar()
   }

   Modal.prototype.setScrollbar = function () {
      var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
      this.originalBodyPad = document.body.style.paddingRight || ''
      if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
   }

   Modal.prototype.resetScrollbar = function () {
      this.$body.css('padding-right', this.originalBodyPad)
   }

   Modal.prototype.measureScrollbar = function () { // thx walsh
      var scrollDiv = document.createElement('div')
      scrollDiv.className = 'modal-scrollbar-measure'
      this.$body.append(scrollDiv)
      var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
      this.$body[0].removeChild(scrollDiv)
      return scrollbarWidth
   }


   // MODAL PLUGIN DEFINITION
   // =======================

   function Plugin(option, _relatedTarget) {
      return this.each(function () {
         var $this = $(this)
         var data = $this.data('bs.modal')
         var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

         if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
         if (typeof option == 'string') data[option](_relatedTarget)
         else if (options.show) data.show(_relatedTarget)
      })
   }

   var old = $.fn.modal

   $.fn.modal = Plugin
   $.fn.modal.Constructor = Modal


   // MODAL NO CONFLICT
   // =================

   $.fn.modal.noConflict = function () {
      $.fn.modal = old
      return this
   }


   // MODAL DATA-API
   // ==============

   $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
      var $this = $(this)
      var href = $this.attr('href')
      var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
      var option = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

      if ($this.is('a')) e.preventDefault()

      $target.one('show.bs.modal', function (showEvent) {
         if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
         $target.one('hidden.bs.modal', function () {
            $this.is(':visible') && $this.trigger('focus')
         })
      })
      Plugin.call($target, option, this)
   })

}(jQuery);
/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2018 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

/*!
 * Generated using the Bootstrap Customizer (<none>)
 * Config saved to config.json and <none>
 */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); +function (t) { "use strict"; var i = t.fn.jquery.split(" ")[0].split("."); if (i[0] < 2 && i[1] < 9 || 1 == i[0] && 9 == i[1] && i[2] < 1 || i[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4") }(jQuery), +function (t) { "use strict"; function i() { var t = document.createElement("bootstrap"), i = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" }; for (var e in i) if (void 0 !== t.style[e]) return { end: i[e] }; return !1 } t.fn.emulateTransitionEnd = function (i) { var e = !1, n = this; t(this).one("bsTransitionEnd", function () { e = !0 }); var o = function () { e || t(n).trigger(t.support.transition.end) }; return setTimeout(o, i), this }, t(function () { t.support.transition = i(), t.support.transition && (t.event.special.bsTransitionEnd = { bindType: t.support.transition.end, delegateType: t.support.transition.end, handle: function (i) { return t(i.target).is(this) ? i.handleObj.handler.apply(this, arguments) : void 0 } }) }) }(jQuery);

/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2018 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

/*!
 * Generated using the Bootstrap Customizer (<none>)
 * Config saved to config.json and <none>
 */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); +function (t) { "use strict"; var e = t.fn.jquery.split(" ")[0].split("."); if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4") }(jQuery), +function (t) { "use strict"; function e(e) { return this.each(function () { var n = t(this), r = n.data("bs.tab"); r || n.data("bs.tab", r = new a(this)), "string" == typeof e && r[e]() }) } var a = function (e) { this.element = t(e) }; a.VERSION = "3.3.7", a.TRANSITION_DURATION = 150, a.prototype.show = function () { var e = this.element, a = e.closest("ul:not(.dropdown-menu)"), n = e.data("target"); if (n || (n = e.attr("href"), n = n && n.replace(/.*(?=#[^\s]*$)/, "")), !e.parent("li").hasClass("active")) { var r = a.find(".active:last a"), i = t.Event("hide.bs.tab", { relatedTarget: e[0] }), s = t.Event("show.bs.tab", { relatedTarget: r[0] }); if (r.trigger(i), e.trigger(s), !s.isDefaultPrevented() && !i.isDefaultPrevented()) { var o = t(n); this.activate(e.closest("li"), a), this.activate(o, o.parent(), function () { r.trigger({ type: "hidden.bs.tab", relatedTarget: e[0] }), e.trigger({ type: "shown.bs.tab", relatedTarget: r[0] }) }) } } }, a.prototype.activate = function (e, n, r) { function i() { s.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), o ? (e[0].offsetWidth, e.addClass("in")) : e.removeClass("fade"), e.parent(".dropdown-menu").length && e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), r && r() } var s = n.find("> .active"), o = r && t.support.transition && (s.length && s.hasClass("fade") || !!n.find("> .fade").length); s.length && o ? s.one("bsTransitionEnd", i).emulateTransitionEnd(a.TRANSITION_DURATION) : i(), s.removeClass("in") }; var n = t.fn.tab; t.fn.tab = e, t.fn.tab.Constructor = a, t.fn.tab.noConflict = function () { return t.fn.tab = n, this }; var r = function (a) { a.preventDefault(), e.call(t(this), "show") }; t(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', r).on("click.bs.tab.data-api", '[data-toggle="pill"]', r) }(jQuery);