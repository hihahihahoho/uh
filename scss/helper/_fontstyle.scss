$map-font-size: (
  xs: 16px,
  sm: 18px,
  md: 22px,
  lg: 24px
);

$map-font-ic: (
  xs: 14px,
  sm: 18px,
  md: 22px,
  lg: 24px
);

$map-ic: (
  xs: 14px,
  sm: 18px,
  md: 22px,
  lg: 24px
);

// $map-h-font: (
//   1: 32px,
//   2: 28px,
//   3: 24px,
//   4: 20px,
//   5: 18px,
//   6: 16px
// );

$map-h-font: (
  1: (
    font-size: 32px,
    line-height: 1.1,
    768: (
      font-size: 28px
    ),
    480: (
      font-size: 24px
    )
  ),
  2: (
    font-size: 24px,
    line-height: 1.1,
    480: (
      font-size: 22px
    )
  ),
  3: (
    font-size: 21px ,
    line-height: 1.1,
    480: (
      font-size: 20px
    )
  ),
  4: (
    font-size: 18px,
    line-height: 1.3
  ),
  5: (
    font-size: 16px,
    line-height: 1.3
  ),
  6: (
    font-size: 12px,
    line-height: 1.3
  )
);

$map-font-weight: (
  1: 100,
  2: 200,
  3: 300,
  4: 400,
  5: 500,
  6: 600,
  7: 700,
  8: 800,
  9: 900
);

$map-text-align-breakpoint: (
  xs: 576px,
  sm: 768px,
  md: 992px,
  lg: 1200px,
);

@mixin modifiers-text-align($map, $alignName, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers-h-font($value, $alignName, $separator);
      } @else {
        @if $alignName == "left" {
          &#{$separator}#{right} {
            @include media(">=#{$value}") {
              text-align: left !important;
            }
            @include media("<#{$value}") {
              text-align: right !important;
            }
          }
          &#{$separator}#{center} {
            @include media(">=#{$value}") {
              text-align: left !important;
            }
            @include media("<#{$value}") {
              text-align: center !important;
            }
          }
          &#{$separator}#{justify} {
            @include media(">=#{$value}") {
              text-align: left !important;
            }
            @include media("<#{$value}") {
              text-align: justify !important;
            }
          }
        }
        @if $alignName == "right" {
          &#{$separator}#{left} {
            @include media(">=#{$value}") {
              text-align: right !important;
            }
            @include media("<#{$value}") {
              text-align: left !important;
            }
          }
          &#{$separator}#{center} {
            @include media(">=#{$value}") {
              text-align: right !important;
            }
            @include media("<#{$value}") {
              text-align: center !important;
            }
          }
          &#{$separator}#{justify} {
            @include media(">=#{$value}") {
              text-align: right !important;
            }
            @include media("<#{$value}") {
              text-align: justify !important;
            }
          }
        }
        @if $alignName == "center" {
          &#{$separator}#{left} {
            @include media(">=#{$value}") {
              text-align: center !important;
            }
            @include media("<#{$value}") {
              text-align: left !important;
            }
          }
          &#{$separator}#{right} {
            @include media(">=#{$value}") {
              text-align: center !important;
            }
            @include media("<#{$value}") {
              text-align: right !important;
            }
          }
          &#{$separator}#{justify} {
            @include media(">=#{$value}") {
              text-align: center !important;
            }
            @include media("<#{$value}") {
              text-align: justify !important;
            }
          }
        }
        @if $alignName == "justiy" {
          &#{$separator}#{left} {
            @include media(">=#{$value}") {
              text-align: justiy !important;
            }
            @include media("<#{$value}") {
              text-align: left !important;
            }
          }
          &#{$separator}#{right} {
            @include media(">=#{$value}") {
              text-align: justiy !important;
            }
            @include media("<#{$value}") {
              text-align: right !important;
            }
          }
          &#{$separator}#{center} {
            @include media(">=#{$value}") {
              text-align: justiy !important;
            }
            @include media("<#{$value}") {
              text-align: center !important;
            }
          }
        }
      }
    }
  }
}
@mixin modifiers-h-font($map, $prefix: "", $separator: "", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      margin: 0;
      @if type-of($value) == "map" {
        @include modifiers-h-font-inner($value);
      } @else {
      }
    }
  }
}
@mixin modifiers-h-font-inner($map) {
  @each $key, $value in $map {
    @if type-of($value) == "map" {
      @include media("<=#{$key}px") {
        @include modifiers-h-font-inner($value);
      }
    } @else {
      #{$key}: #{$value};
    }
  }
}
@mixin modifiers-ic-size($map, $attribute, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers-ic-size($value, $attribute, $separator);
      } @else {
        #{$attribute}: $value;
        height: auto;
      }
    }
  }
}

.text {
  &-left {
    text-align: left !important;
    @include modifiers-text-align($map-text-align-breakpoint, "left");
  }
  &-center {
    text-align: center !important;
    @include modifiers-text-align($map-text-align-breakpoint, "center");
  }
  &-right {
    text-align: right !important;
    @include modifiers-text-align($map-text-align-breakpoint, "right");
  }
  &-justify {
    text-align: justify !important;
    @include modifiers-text-align($map-text-align-breakpoint, "justify");
  }
}

.ic {
  @include modifiers-ic-size($map-ic, "width");
  height: auto;
}

.font {
  @include modifiers($map-font-size, "font-size");
  &-ic {
    @include modifiers($map-font-ic, "font-size");
  }
}

h,
.h {
  @include modifiers-h-font($map-h-font);
}

.weight {
  @include modifiers($map-font-weight, "font-weight", $prefix: "",  $separator: "");
}

.b,
b {
  font-weight: bold;
}

p,.p {
  font-size: $font-size-default;
  line-height: 1.5;
}

label {
  font-size: $font-size-default;
}

select,
textarea,
input,
button {
  font-size: $font-size-default;
  outline: none;
  -webkit-appearance: none;
}

select {
  cursor: pointer;
}
