@mixin modifiers-input-ic($map, $attribute, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key},
      '') } {
      @if type-of($value) == "map" {
        @include modifiers-input-ic($value, $attribute, $separator);
      } @else {
        padding-right: $value;
        ~ .input-ic {
          #{$attribute}: $value;
        }
      }
    }
  }
}

@mixin modifiers-input-linebar-ic($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key},
      '') } {
      @if type-of($value) == "map" {
        @include modifiers-input-linebar-ic($value, $separator);
      } @else {
        &:not(textarea),
        &.textarea-autosize {
          height: $value;
        }
        &.textarea-autosize {
          padding-top: ($value - $input-font-size * 1.5)/2;
          padding-bottom: ($value - $input-font-size * 1.5)/2;
        }
        &:not(textarea) ~ .input-line-bar {
          height: $value;
          :after {
            top: $value;
          }
        }
        & ~ .input-ic {
          height: $value;
          line-height: $value;
        }
        & ~ .select2-container .select2-selection--single,
        & ~ .btn-group .multiselect {
          height: $value;
          .select2-selection__rendered {
            line-height: $value;
          }
        }
        & ~ .select2-container .select2-selection--multiple {
          min-height: $value;
          .select2-search__field {
            height: $value;
          }
        }
        &:not(.input-material-2):not(.input-material-3):not(.input-material) {
          ~ .select2-container .select2-selection--multiple {
            .select2-selection__placeholder {
              //   height: $value - 2px;
              //   line-height: $value - 2px;
              margin-top: 0;
            }
          }
        }
      }
    }
  }
}

.form {
  &-horizontal {
    .input-label {
      margin-bottom: $input-label-margin-bottom;
    }
    .input-label[class*="col-lg"] {
      &:first-child {
        @include media(">=1200px") {
          margin-bottom: 0;
        }
      }
    }
    .input-label[class*="col-md"] {
      &:first-child {
        @include media(">=992px") {
          margin-bottom: 0;
        }
      }
    }
    .input-label[class*="col-sm"] {
      &:first-child {
        @include media(">=768px") {
          margin-bottom: 0;
        }
      }
    }
    .input-label[class*="col-xs"] {
      &:first-child {
        margin-bottom: 0;
      }
    }
  }
  &-vertical {
    .input-label {
      width: 100%;
      display: block;
      margin-bottom: $input-label-margin-bottom;
    }
  }
}
.parsley-errors-list {
  margin: 0;
}
label.error,
.parsley-errors-list.filled {
  display: block;
  margin-top: 7px;
  font-size: $input-error-font-size;
  color: map-get($map-color-level, false);
}

.error,
.parsley-error {
  border-color: map-get($map-color-level, false) !important;
  & ~ .select2-container--default .select2-selection--single,
  & ~ .select2-container--default .select2-selection--multiple {
    border-color: map-get($map-color-level, false) !important;
  }
}

.input {
  width: 100%;
  border-radius: $input-border-radius;
  padding-left: $input-space-left;
  padding-right: 10px;
  font-size: $input-font-size;
  transition: all 0.15s ease-in-out;
  @include modifiers-input-linebar-ic($map-input-size);
  ~ .input-ic:after {
    content: "";
    position: absolute;
    right: 1px;
    border-radius: $input-border-radius;
    top: 1px;
    width: 140%;
    height: calc(100% - 5px);
    z-index: -1;
  }
  &-label {
    font-weight: $input-label-font-weight;
    font-size: $input-label-font-size;
    color: $input-label-color;
    line-height: 1.2;
  }
  &-line-bar {
    pointer-events: none;
    position: absolute;
    overflow: hidden;
    width: 100%;
    top: 0;
    border-radius: $input-border-radius;
    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      margin: auto;
      background-color: $input-line-bar-color;
      height: $input-line-bar-height;
      width: 0;
      @include transition(0.15s ease-in-out);
      @include z-index(input-line-bar);
    }
  }
  &-line,
  &-material {
    & ~ .input-line-bar {
      border-radius: 0;
    }
  }
  &.multiselect {
    display: none;
  }
  &::-ms-clear {
    display: none;
  }
  &.input-ic-left {
    &.input-ic {
      @include modifiers($map-input-size, "padding-left");
    }
  }
  &-upload {
    display: table;
    width: 100%;
    .btn-text {
      white-space: nowrap;
    }
    &-input {
      &:focus {
        & ~ .input-upload .input-line-bar {
          &:after {
            width: 100%;
          }
        }
      }
    }
    > .input {
      display: table-cell;
      vertical-align: middle;
      &-sm,
      &-xs {
        padding-left: 6px;
      }
      &-lg,
      &-md {
        padding-left: 8px;
      }
      &-line,
      &-material,
      &-material-2 {
        padding-left: 0;
      }
      > .btn {
        > .btn-text {
          white-space: nowrap;
          display: block;
          padding-left: 0;
          padding-right: 0;
        } //   &-xs {
        //     height: $input-size-xs - 12px;
        //   }
        //   &-sm {
        //     height: $input-size-sm - 12px;
        //   }
        //   &-md {
        //     height: $input-size-md - 16px;
        //   }
        //   &-lg {
        //     height: $input-size-lg - 16px;
        //   }
      }
    }
  }
  &-multiselect-search {
    border: 1px solid #e6edf6;
    background-color: #f6f7f9;
    font-size: 14px;
  }
  &:disabled {
    opacity: $input-disabled-opacity;
    background: $input-disabled-background;
    & ~ .input-ic {
      opacity: $input-disabled-opacity;
    }
  }
  &-white {
    border: transparent;
  }
  &-group {
    position: relative;
  }
  &-ic {
    position: absolute;
    top: 0;
    right: 0;
    text-align: center;
    font-size: 0;
    font-weight: 600;
    z-index: 1;
    @include modifiers-input-ic($map-input-size, "width");
    &-left {
      & ~ .input-ic {
        left: 0;
        right: auto;
      }
    }
    &-auto-width {
      width: auto;
    }
    &:not(.input-clear) {
      pointer-events: none;
    }
    &.input-clear {
      cursor: pointer;
      display: none;
    }
  }
  &-shadow {
    border: 0;
    @include box-shadow(0 2px 4px 0 rgba(black, 0.16));
  }
  &-no-border {
    border: 0;
    padding: 0;
  }
  &-pointer {
    pointer-events: all;
    cursor: pointer;
  }
  & ~ .select2-container--open,
  & ~ .btn-group.open {
    .select2-selection--multiple,
    .select2-selection--single {
      &:after {
        width: 100% !important;
      }
    }
  }
  &:focus,
  &.light-pick-focus,
  & ~ .btn-group.open {
    & ~ .input-line-bar {
      &:after {
        width: 100%;
      }
    }
  }
}

input {
  &::placeholder {
    color: $input-placeholder-color;
  }
}

.input-no-border {
  & ~ .select2-container--default {
    .select2-selection--single {
      border: 0;
    }
    .select2-selection__rendered {
      padding-left: 0;
    }
  }
}

.input-white {
  & ~ .select2-container--default {
    .select2-selection--single {
      border: 1px solid transparent;
    }
  }
}

input[type="file"] {
  display: none;
}

textarea {
  padding-top: 10px;
  padding-bottom: 10px;
  display: block;
  &:focus {
    & ~ .input-line-bar {
      width: 100%;
    }
  }
  & ~ .input-line-bar {
    bottom: 0;
    height: 10px;
    top: auto !important;
  }
}

.upload-file {
  border-radius: $upload-border-radius;
  border: $upload-border;
  position: relative;
  display: block;
  padding: 15px;
  &-type {
    .inline-block {
      font-size: 12px;
      color: $color-grey;
      font-weight: 600;
      text-transform: uppercase;
    }
  }
}

.textarea-autosize {
  max-height: $textarea-autosize-max-height;
  overflow: auto !important;
  &:after {
    content: "";
    position: relative;
    height: 10px;
    width: 100%;
    display: block;
  }
}

textarea {
  line-height: $textarea-line-height;
  resize: none;
  line-height: 1.5;
}

.input-group-flex {
  display: flex;
  flex-wrap: nowrap;
  align-items: stretch;
}
